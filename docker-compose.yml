version: "3"
services:
  api_composer_service:
    image: api_composer_service
    build:
      context: ./API_Composer_Service
      dockerfile: Dockerfile
    environment:
      - USER_SERVICE_HOSTNAME=user_service
      - ZONE_SERVICE_HOSTNAME=zone_service
      - INSIDE_OUTSIDE_SERVICE_HOSTNAME=inside_outside_service
      - LOCATION_SERVICE_HOSTNAME=location_service
      - DASHBOARD_SERVICE_HOSTNAME=dashboard_service
    ports:
      - 3008:3008
  zones_service:
    image: zones_service
    build:
      context: ./Zones_Service
      dockerfile: Dockerfile
    ports:
      - 3007:3007
    environment:
      - RDS_HOSTNAME=host.docker.internal
      - USER_SERVICE_HOSTNAME=user_service
  user_service:
    image: user_service
    build:
      context: ./User_Service
      dockerfile: Dockerfile
    ports:
      - 3001:3001
    environment:
      - RDS_HOSTNAME=host.docker.internal
      - USER_SERVICE_HOSTNAME=user_service
  location_service:
    image: location_service
    build:
      context: ./Location_Service
      dockerfile: Dockerfile
    ports:
      - 3002:3002
    environment:
      - RDS_HOSTNAME=host.docker.internal
      - USER_SERVICE_HOSTNAME=user_service
  insight_service:
    image: insight_service
    build:
      context: ./Insight_Service
      dockerfile: Dockerfile
    ports:
      - 3003:3003
    environment:
      - RDS_HOSTNAME=host.docker.internal
      - USER_SERVICE_HOSTNAME=user_service
  inside_outside_service:
    image: inside_outside_service
    build:
      context: ./Inside_Outside_Service
      dockerfile: Dockerfile
    ports:
      - 3004:3004
    environment:
      - RDS_HOSTNAME=host.docker.internal
      - USER_SERVICE_HOSTNAME=user_service
  dashboard_service:
    image: dashboard_service
    build:
      context: ./Dashboard_Service
      dockerfile: Dockerfile
    ports:
      - 3006:3006
    environment:
      - RDS_HOSTNAME=host.docker.internal
      - USER_SERVICE_HOSTNAME=user_service
  frontend:
    image: frontend
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000